server:
  port: 8080

spring:
  application:
    name: running
  data:
    redis:
      host: localhost
      port: 6379

  # MySQL
  datasource:
    url: jdbc:mysql://${DATABASE_URL}:${DATABASE_PORT}/${DATABASE_NAME}
    username: ${DATABASE_USER_ID}
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # JPA
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
aws:
  credentials:
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
  region: ap-northeast-2

jwt:
  secret:
    key: ${JWT_KEY}

kakao:
  client:
    id: ${KAKAO_CLIENT_ID}
  uri:
    redirect: ${KAKAO_OAUTH_REDIRECT_URI}
    token-request: ${KAKAO_TOKEN_REQUEST_URI}
    user-request: ${KAKAO_USER_INFO_REQUEST_URI}

google:
  client:
    id: ${GOOGLE_CLIENT_ID}
    secret: ${GOOGLE_CLIENT_SECRET}
  uri:
    redirect: ${GOOGLE_OAUTH_REDIRECT_URI}
    token-request: ${GOOGLE_TOKEN_REQUEST_URI}
    user-request: ${GOOGLE_USER_INFO_REQUEST_URI}

apple:
  uri:
    redirect: ${APPLE_REDIRECT_URI}
    token-request: ${APPLE_TOKEN_REQUEST_URI}
  client:
    id: ${APPLE_CLIENT_ID}
  team:
    id: ${APPLE_TEAM_ID}
  key:
    id: ${APPLE_KEY_ID}
    content: ${APPLE_KEY_CONTENT}

